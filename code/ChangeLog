2013-02-03  Michal Staniaszek  <mxs968@cs.bham.ac.uk>

	* estimator_baseline.c: Discovered crashes, but not sure of the cause.
	Mostly related to estimation of functions generated by the random
	generator, but this implies that there is something to do with the
	shape of the function that causes the crashes.

	* math_util.c: Functions to create gaussian vectors take a multiplier
	which modifies the weights of gaussians. Standard weights are ~ N(0,1).
	This allows for functions to have larger ranges than just -5 to 5 or so.

	* estimator_gaussian.c: Reverted to using the standard system in use for
	everything else rather than kernel density.

	* printf: Some print statements depend on the VERBOSE flag being defined.
	can do this at compile time by passing -DVERBOSE to make.

	* output: Modifications to output filenames for the various generators
	and estimators.

2013-02-02  Michal Staniaszek  <mxs968@cs.bham.ac.uk>

	* launcher.h: Updated help info for switches, -R replaced with -t, specify
	output type.

	* general_util.c: Function for freeing memory allocated for
	double_multi_arr structs. Default parameter file has more files to output
	gaussian data to. Separate ones for raw data and that generated from
	an event file.

	* math_util.c: GSL random number generator is deallocated when
	the program exits using an atexit function. Function for shifting
	a gauss transform so that all points are non-negative

	* generator.c: Generation of event streams from gaussians. Generation
	of functions simplified to a single function. Output of contribution
	of gaussians if the -t 2 switch is used.

	* launcher.c: Generation of event streams from gaussians possible
	by passing the -f rand switch to the launcher. If no parameter is
	provided then the default muparser version is used which takes the
	function in the paramfile. Function generation is done using the
	-r switch. Adding -R outputs gaussians in their raw forms, and
	including an input file with one-dimensional data has the program
	centre a gaussian on each point.

2013-02-01  Michal Staniaszek  <mxs968@cs.bham.ac.uk>

	* launcher.c: Added struct to make adding switches easier. Split
	multi-estimate function into gaussian and other estimators since
	return types are different.

	* generator.c: Random functions can now be generated with the
	-r switch. Still untested, but appears to work as intended. Another
	function for gaussians also implemented, but not sure of what
	functionality it should have. One function is required to generate
	random functions for experimenting on, the other is used to generate
	gaussians from event data to use in gaussian estimates?

	* file_util.c: Function for outputting double_multi_arr struct.

	* math_util.c: Fixed cause of crash on fclose when calling the
	gauss_transform function - data was being written to un-malloced
	locations. Changed return type of gaussian transform to struct to
	make it easier to work with. Gaussian transform needs some kind of
	normalisation parameter so that it outputs data int the correct range
	for the function it is being used to estimate. Attempted to implement
	kernel density estimation, but still unsure of how to proceed.

	* estimator.c: New file can be run by calling the estimator with the
	-a gauss switch. Multiple stream estimates are also possible.

	* estimator_gaussian.c: New estimator which uses kernel density
	to estimate functions. Prototype functions implemented.

	* makefile.am: Dependencies for new file added.

	* defparams.h: Added gaussian estimation and generation parameters.

	* general_util.c: Added writing of gaussian parameters to default
	paramfile.

	* params.txt: Gaussian estimation and generation parameters split.

2013-01-31  Michal Staniaszek  <mxs968@cs.bham.ac.uk>

	* file_util.c: Extremely weird bug where crash occurs on fclose discovered.
	Not sure how to solve yet. Functions to read and write gaussians with
	mean, stdev and weight representation, along with tests.

	* struct.h: Header file for structs to prevent interdependencies causing
	compilation issues.

	* defparams.h: Default gaussian parameters

	* general_util.c: Gaussian parameters added to default paramfile generation.
	Functions for printing and freeing gaussian vectors.

	* params.txt: Added gaussian parameters


2013-01-30  Michal Staniaszek  <mxs968@cs.bham.ac.uk>

	* check_math_util.c: tests for the new functions

	* math_util.c: Function for generating a vector initialised with the same
	values, finding the minimum value in an array, adding a constant to an array.

	* launcher.c: Can generate gaussians from the launcher into output files.

	* generator.c: Generation functions for gaussians. Output data to files.

	* general_util.c: Parameters for gaussians added to default file generation.

	* file_util.c: Gauss transform output can be shifted along the y axis.

2013-01-29  Michal Staniaszek  <mxs968@cs.bham.ac.uk>

	* file_util.c: Wondering whether to allow parameters without
	values specified. Makes having to specify loads of parameters
	in the experiment paramfile unnecessary if you just want to run
	experiments on one part of the system.

	* experimenter.c: Function to parse parameters from a string of
	comma separated values. If the string contains a range indicator
	(...), then it will revert to the function to calculate the range.
	Experimenter structure changed. Requires parameters to be defined
	for all the parts of the system you want to experiment with. Checks
	whether these parameters exist in the paramfile. Still a work in
	progress.

	* general_util.c: Function to check whether parameters in a string
	array are present in a paramlist.

2013-01-28  Michal Staniaszek  <mxs968@cs.bham.ac.uk>

	* general_util.c: Modified split_string function and its tests.

	* experimenter.c: Completed range parsing functions, with tests.
	Experimenter now takes two parameter files to read - one to read
	default parameters, and one for its own use. Checks that some required
	parameters are present.

	* exp_param.txt: Added some parameters that make sense to use.

	* check_file_util.c: Test for create file function.

	* file_util.c: Added function for creating files within directories.
	Fixed crash when parameter in paramfile does not have a value.

2013-01-27  Michal Staniaszek  <mxs968@cs.bham.ac.uk>

	* math_util.c: Error checking on parameters for some gaussian functions

	* check_math_util.c: Added tests for gaussian-related code

	* combinefunction.c: Basic error checking added.

	* tests: Tests for combining functions.

2013-01-26  Michal Staniaszek  <mxs968@cs.bham.ac.uk>

	* GMP: Removed use of GMP in math library - necessary functionality
	available in GSL.

	* estimator_piecewise.c: Replaced custom probability mass function with
	the function from the GSL.

	* math_util.h: Fixed bug in gaussian transform calculation, split some
	functions to get more control over what goes on.

	* file_util.h: Added functions for outputting gaussians and discrete
	Gaussian transforms to file. Moved includes into header file.
	Function for writing one of the new structs to file.

	* launcher.c: multi-estimate data should go to specified output file.

	* general_util.c: Parameter for step used when going through data added

	* general_util.h: Added some structs to make array length storage easier.

	* combinefunction.c: Function used to combine functions now works as it should,
	returning an array containing data to use.

2013-01-25  Michal Staniaszek  <mxs968@cs.bham.ac.uk>

	* generator.c: Changed random number function usage to echo below
	changes.

	* configure.ac: Added checks for GSL library

	* math_util.c: Switched to using GSL to generate random numbers.
	Implemented discrete Gaussian transform with some structs to store
	Gaussians in a clean way. Various functions for initialising vectors
	of gaussians.

2013-01-23  Michal Staniaszek  <mxs968@cs.bham.ac.uk>

	* launcher.c: Updated to reflect changes to functions in combinefunction.c

	* combinefunction.c: Implemented a basic function combinator. Current implementation
	is rough and outputs to a file specified within the code.

2013-01-20  Michal Staniaszek  <mxs968@cs.bham.ac.uk>

	* launcher.c: Estimation of multiple streams at once by the launcher. Updated
	switches to allow for this. Some commenting and more checking for null values.

	* combinefunction.c: Function skeletons for combining functions.

	* makefile.am: Added new file and dependencies generated by it to launcher.

	* scripts: Removed unused plotting scripts. Obsoleted by plotmaster.

	* estimators: All now return an est_arr rather than some returning est_data.
	Easier to integrate with the launcher and other parts of the system.

	* memory: Fixed some leaks caused by swath of changes, and some old ones.

2013-01-19  Michal Staniaszek  <mxs968@cs.bham.ac.uk>

	* headers: Moved headers around in some files in src. Launcher strings
	moved into header file.

	* src/makefile.am: No longer includes muparser. Correctly added by
	configure.ac.

	* configure.ac: Checks for correct version of muparser.

	* plotmaster.sh: Plots data from the new plot

	* plots: Gnuplot code for plotting two estimates added


2013-01-13  Michal Staniaszek  <mxs968@cs.bham.ac.uk>

	* paramlist.c: Added functions for setting the value of parameters in the list.

	* file_util.c: Modified file generator to take parameters.

	* generator.c: Added helper function to extract parameters from a parameter
	file.

	* estimator_piecewise.c: Fixed bug with estimation data from the first
	subinterval not being output to file. Minimum length of interval now in
	place for piecewise estimate. Affects the baseline estimator as well.

	* defparams.h: New header file containing default parameters for estimators
	and generator.

	* general_util.c: Added a function for generating a default parameter file,
	moved in function for checking parameters in a list.

2013-01-11  Michal Staniaszek  <mxs968@cs.bham.ac.uk>

	* estimator_piecewise.c: Removed preprocessor variables and modified functions
	to take additional parameters instead.

	* estimators: Added a helper function to the estimators so that you do not
	have to call them with all the parameters specified if it is not necessary.
	You can now pass in a parameter list containing the relevant parameters,
	which will be extracted and passed into the function.

	* tests/Makefile.am: Tests can now be compiled using `make check`

	* tests/check_estimator.c: Added a basic test for estimator.c

	* tests/testmain.c: Added estimator test suite.

	* AUTHORS: Added name

	* ChangeLog: Put some actual stuff in it.

	* NEWS: Very brief information about releases.

	* README: Added basic information.
